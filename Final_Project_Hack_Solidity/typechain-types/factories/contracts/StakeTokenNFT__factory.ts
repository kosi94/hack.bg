/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakeTokenNFT,
  StakeTokenNFTInterface,
} from "../../contracts/StakeTokenNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "Type",
        type: "uint16",
      },
    ],
    name: "TypeNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNFTType",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "nft_type",
        type: "uint16",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600d60808190526c14dd185ad9551bdad95b939195609a1b60a0908152620000309160049190620000e1565b503480156200003e57600080fd5b506040518060800160405280605a815260200162001d0e605a9139620000648162000076565b5062000070336200008f565b620001c4565b80516200008b906002906020840190620000e1565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ef9062000187565b90600052602060002090601f0160209004810192826200011357600085556200015e565b82601f106200012e57805160ff19168380011785556200015e565b828001600101855582156200015e579182015b828111156200015e57825182559160200191906001019062000141565b506200016c92915062000170565b5090565b5b808211156200016c576000815560010162000171565b600181811c908216806200019c57607f821691505b60208210811415620001be57634e487b7160e01b600052602260045260246000fd5b50919050565b611b3a80620001d46000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c806389afcb4411610097578063ad0be4bd11610066578063ad0be4bd1461020e578063e985e9c514610221578063f242432a1461025d578063f2fde38b1461027057600080fd5b806389afcb44146101a75780638da5cb5b146101ba578063971349e3146101d5578063a22cb465146101fb57600080fd5b80630e89341c116100d35780630e89341c146101575780632eb2c2d61461016a5780634e1273f41461017f578063715018a61461019f57600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806306fdde0314610142575b600080fd5b61010c61010736600461155f565b610283565b6040519081526020015b60405180910390f35b61013261012d366004611653565b610319565b6040519015158152602001610116565b61014a61036b565b604051610116919061180c565b61014a61016536600461168b565b6103f9565b61017d6101783660046113eb565b61048d565b005b61019261018d366004611588565b6104d9565b60405161011691906117cb565b61017d61063b565b61017d6101b5366004611398565b61064f565b6003546040516001600160a01b039091168152602001610116565b6101e86101e3366004611398565b6106a1565b60405161ffff9091168152602001610116565b61017d6102093660046114f4565b61071d565b61017d61021c36600461152e565b610728565b61013261022f3660046113b9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61017d61026b366004611491565b610811565b61017d61027e366004611398565b610856565b60006001600160a01b0383166102f35760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061034a57506001600160e01b031982166303a24d0760e21b145b8061036557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6004805461037890611981565b80601f01602080910402602001604051908101604052809291908181526020018280546103a490611981565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b505050505081565b60606002805461040890611981565b80601f016020809104026020016040519081016040528092919081815260200182805461043490611981565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806104a957506104a9853361022f565b6104c55760405162461bcd60e51b81526004016102ea9061181f565b6104d285858585856108cf565b5050505050565b6060815183511461053e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102ea565b6000835167ffffffffffffffff81111561056857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610591578160200160208202803683370190505b50905060005b8451811015610633576105f88582815181106105c357634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106105eb57634e487b7160e01b600052603260045260246000fd5b6020026020010151610283565b82828151811061061857634e487b7160e01b600052603260045260246000fd5b602090810291909101015261062c81611a05565b9050610597565b509392505050565b610643610ac8565b61064d6000610b22565b565b6000805b60048161ffff16101561068c5761066e838261ffff16610283565b6001141561067a578091505b80610684816119e3565b915050610653565b5061069d828261ffff166001610b74565b5050565b6000805b60048161ffff161015610717576106c0838261ffff16610283565b600114156107055760405161ffff821681527f084960ec4bf167b13d6caea7354bd550ccc38449c5ad11e9444bcfe75d3299309060200160405180910390a192915050565b8061070f816119e3565b9150506106a5565b50919050565b61069d338383610cf5565b610730610ac8565b60038161ffff1611156107855760405162461bcd60e51b815260206004820152601a60248201527f4d696e74204e4654205459504520697320696e636f727265637400000000000060448201526064016102ea565b610793828261ffff16610283565b156107f15760405162461bcd60e51b815260206004820152602860248201527f43616e74206d696e742074776963652073616d65206e66745f74797065207065604482015267722061646472657360c01b60648201526084016102ea565b61069d828261ffff16600160405180602001604052806000815250610dd6565b6001600160a01b03851633148061082d575061082d853361022f565b6108495760405162461bcd60e51b81526004016102ea9061181f565b6104d28585858585610ee1565b61085e610ac8565b6001600160a01b0381166108c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ea565b6108cc81610b22565b50565b81518351146109315760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102ea565b6001600160a01b0384166109575760405162461bcd60e51b81526004016102ea906118b6565b3360005b8451811015610a5a57600085828151811061098657634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106109b257634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610a025760405162461bcd60e51b81526004016102ea906118fb565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a3f908490611969565b9250508190555050505080610a5390611a05565b905061095b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610aaa9291906117de565b60405180910390a4610ac081878787878761100b565b505050505050565b6003546001600160a01b0316331461064d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ea565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316610bd65760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016102ea565b336000610be284611176565b90506000610bef84611176565b60408051602080820183526000918290528882528181528282206001600160a01b038b1683529052205490915084811015610c785760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016102ea565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46040805160208101909152600090525b50505050505050565b816001600160a01b0316836001600160a01b03161415610d695760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102ea565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610e365760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102ea565b336000610e4285611176565b90506000610e4f85611176565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610e81908490611969565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610cec836000898989896111cf565b6001600160a01b038416610f075760405162461bcd60e51b81526004016102ea906118b6565b336000610f1385611176565b90506000610f2085611176565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610f635760405162461bcd60e51b81526004016102ea906118fb565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610fa0908490611969565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611000848a8a8a8a8a6111cf565b505050505050505050565b6001600160a01b0384163b15610ac05760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061104f9089908990889088908890600401611728565b602060405180830381600087803b15801561106957600080fd5b505af1925050508015611099575060408051601f3d908101601f191682019092526110969181019061166f565b60015b611146576110a5611a4c565b806308c379a014156110df57506110ba611a64565b806110c557506110e1565b8060405162461bcd60e51b81526004016102ea919061180c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102ea565b6001600160e01b0319811663bc197c8160e01b14610cec5760405162461bcd60e51b81526004016102ea9061186e565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106111be57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610ac05760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112139089908990889088908890600401611786565b602060405180830381600087803b15801561122d57600080fd5b505af192505050801561125d575060408051601f3d908101601f1916820190925261125a9181019061166f565b60015b611269576110a5611a4c565b6001600160e01b0319811663f23a6e6160e01b14610cec5760405162461bcd60e51b81526004016102ea9061186e565b80356001600160a01b03811681146112b057600080fd5b919050565b600082601f8301126112c5578081fd5b813560206112d282611945565b6040516112df82826119b6565b8381528281019150858301600585901b870184018810156112fe578586fd5b855b8581101561131c57813584529284019290840190600101611300565b5090979650505050505050565b600082601f830112611339578081fd5b813567ffffffffffffffff81111561135357611353611a36565b60405161136a601f8301601f1916602001826119b6565b81815284602083860101111561137e578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156113a9578081fd5b6113b282611299565b9392505050565b600080604083850312156113cb578081fd5b6113d483611299565b91506113e260208401611299565b90509250929050565b600080600080600060a08688031215611402578081fd5b61140b86611299565b945061141960208701611299565b9350604086013567ffffffffffffffff80821115611435578283fd5b61144189838a016112b5565b94506060880135915080821115611456578283fd5b61146289838a016112b5565b93506080880135915080821115611477578283fd5b5061148488828901611329565b9150509295509295909350565b600080600080600060a086880312156114a8578081fd5b6114b186611299565b94506114bf60208701611299565b93506040860135925060608601359150608086013567ffffffffffffffff8111156114e8578182fd5b61148488828901611329565b60008060408385031215611506578182fd5b61150f83611299565b915060208301358015158114611523578182fd5b809150509250929050565b60008060408385031215611540578182fd5b61154983611299565b9150602083013561ffff81168114611523578182fd5b60008060408385031215611571578182fd5b61157a83611299565b946020939093013593505050565b6000806040838503121561159a578182fd5b823567ffffffffffffffff808211156115b1578384fd5b818501915085601f8301126115c4578384fd5b813560206115d182611945565b6040516115de82826119b6565b8381528281019150858301600585901b870184018b10156115fd578889fd5b8896505b848710156116265761161281611299565b835260019690960195918301918301611601565b509650508601359250508082111561163c578283fd5b50611649858286016112b5565b9150509250929050565b600060208284031215611664578081fd5b81356113b281611aee565b600060208284031215611680578081fd5b81516113b281611aee565b60006020828403121561169c578081fd5b5035919050565b6000815180845260208085019450808401835b838110156116d2578151875295820195908201906001016116b6565b509495945050505050565b60008151808452815b81811015611702576020818501810151868301820152016116e6565b818111156117135782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611754908301866116a3565b828103606084015261176681866116a3565b9050828103608084015261177a81856116dd565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906117c0908301846116dd565b979650505050505050565b6020815260006113b260208301846116a3565b6040815260006117f160408301856116a3565b828103602084015261180381856116a3565b95945050505050565b6020815260006113b260208301846116dd565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561195f5761195f611a36565b5060051b60200190565b6000821982111561197c5761197c611a20565b500190565b600181811c9082168061199557607f821691505b6020821081141561071757634e487b7160e01b600052602260045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156119dc576119dc611a36565b6040525050565b600061ffff808316818114156119fb576119fb611a20565b6001019392505050565b6000600019821415611a1957611a19611a20565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611a6157600481823e5160e01c5b90565b600060443d1015611a725790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611aa257505050505090565b8285019150815181811115611aba5750505050505090565b843d8701016020828501011115611ad45750505050505090565b611ae3602082860101876119b6565b509095945050505050565b6001600160e01b0319811681146108cc57600080fdfea2646970667358221220e1537c4021e624b46f46154554253443bde65b13874fba992c0cb5f8ba07894f64736f6c6343000804003368747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d61596f4355425470426b6f5279526f6d666763644d3145476a4641735535707a5877756b517778516a3863512f7b69647d2e6a736f6e";

type StakeTokenNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeTokenNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeTokenNFT__factory extends ContractFactory {
  constructor(...args: StakeTokenNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakeTokenNFT> {
    return super.deploy(overrides || {}) as Promise<StakeTokenNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StakeTokenNFT {
    return super.attach(address) as StakeTokenNFT;
  }
  override connect(signer: Signer): StakeTokenNFT__factory {
    return super.connect(signer) as StakeTokenNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeTokenNFTInterface {
    return new utils.Interface(_abi) as StakeTokenNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeTokenNFT {
    return new Contract(address, _abi, signerOrProvider) as StakeTokenNFT;
  }
}
