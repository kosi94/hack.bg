/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakeToken,
  StakeTokenInterface,
} from "../../contracts/StakeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "StakeTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "Reward",
        type: "uint256",
      },
    ],
    name: "RewardIfUnstake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "StakeTokenNFTAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateNFTType",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractavailableETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "depositedeth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricepertoken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rewardifunstake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakedSTK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "timestampofstaking",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260078054600160a01b600160e01b031916600160a01b1790553480156200002a57600080fd5b5060405162001822380380620018228339810160408190526200004d91620001fe565b604051806040016040528060058152602001645374616b6560d81b8152506040518060400160405280600381526020016253544b60e81b81525081600390805190602001906200009f92919062000158565b508051620000b590600490602084019062000158565b505050620000d2620000cc6200010260201b60201c565b62000106565b600680546001600160a01b039092166001600160a01b03199283168117909155600780549092161790556200026b565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000166906200022e565b90600052602060002090601f0160209004810192826200018a5760008555620001d5565b82601f10620001a557805160ff1916838001178555620001d5565b82800160010185558215620001d5579182015b82811115620001d5578251825591602001919060010190620001b8565b50620001e3929150620001e7565b5090565b5b80821115620001e35760008155600101620001e8565b60006020828403121562000210578081fd5b81516001600160a01b038116811462000227578182fd5b9392505050565b600181811c908216806200024357607f821691505b602082108114156200026557634e487b7160e01b600052602260045260246000fd5b50919050565b6115a7806200027b6000396000f3fe60806040526004361061019c5760003560e01c80638da5cb5b116100ec578063a9059cbb1161008a578063efb74a8711610064578063efb74a871461048d578063f2fde38b146104ba578063fb20e240146104da578063fe7698861461050757600080fd5b8063a9059cbb1461041a578063dd62ed3e1461043a578063e6d03dd71461045a57600080fd5b806395d89b41116100c657806395d89b41146103b2578063a0712d68146103c7578063a457c2d7146103da578063a694fc3a146103fa57600080fd5b80638da5cb5b1461035257806390386bbf1461037057806390560ebb1461038557600080fd5b8063313ce5671161015957806358bd88de1161013357806358bd88de146102bc57806370a08231146102f4578063715018a61461032a57806382cdb9151461033f57600080fd5b8063313ce5671461026b57806339509351146102875780633ccfd60b146102a757600080fd5b806306fdde03146101a1578063095ea7b3146101cc5780630dcfa3f0146101fc57806318160ddd1461021f57806323b872dd146102345780632def662014610254575b600080fd5b3480156101ad57600080fd5b506101b661051a565b6040516101c39190611438565b60405180910390f35b3480156101d857600080fd5b506101ec6101e73660046113f7565b6105ac565b60405190151581526020016101c3565b34801561020857600080fd5b506102116105c4565b6040519081526020016101c3565b34801561022b57600080fd5b50600254610211565b34801561024057600080fd5b506101ec61024f3660046113bc565b6105eb565b34801561026057600080fd5b5061026961060f565b005b34801561027757600080fd5b50604051601281526020016101c3565b34801561029357600080fd5b506101ec6102a23660046113f7565b6106f4565b3480156102b357600080fd5b50610269610716565b3480156102c857600080fd5b506006546102dc906001600160a01b031681565b6040516001600160a01b0390911681526020016101c3565b34801561030057600080fd5b5061021161030f366004611369565b6001600160a01b031660009081526020819052604090205490565b34801561033657600080fd5b50610269610803565b61021161034d366004611420565b610815565b34801561035e57600080fd5b506005546001600160a01b03166102dc565b34801561037c57600080fd5b506102696108c5565b34801561039157600080fd5b506102116103a0366004611369565b600a6020526000908152604090205481565b3480156103be57600080fd5b506101b66108fc565b6102696103d5366004611420565b61090b565b3480156103e657600080fd5b506101ec6103f53660046113f7565b6109b4565b34801561040657600080fd5b50610269610415366004611420565b610a2f565b34801561042657600080fd5b506101ec6104353660046113f7565b610bf8565b34801561044657600080fd5b5061021161045536600461138a565b610c06565b34801561046657600080fd5b5061047a610475366004611420565b610c31565b60405161ffff90911681526020016101c3565b34801561049957600080fd5b506102116104a8366004611369565b60096020526000908152604090205481565b3480156104c657600080fd5b506102696104d5366004611369565b610c9f565b3480156104e657600080fd5b506102116104f5366004611369565b60086020526000908152604090205481565b34801561051357600080fd5b5047610211565b60606003805461052990611520565b80601f016020809104026020016040519081016040528092919081815260200182805461055590611520565b80156105a25780601f10610577576101008083540402835291602001916105a2565b820191906000526020600020905b81548152906001019060200180831161058557829003601f168201915b5050505050905090565b6000336105ba818585610d15565b5060019392505050565b6007546000906105e6904290600160a01b900467ffffffffffffffff166114ea565b905090565b6000336105f9858285610e3a565b610604858585610eae565b506001949350505050565b336000908152600960205260409020546106445760405162461bcd60e51b815260040161063b9061148b565b60405180910390fd5b336000818152600a602052604090205461068291906106639042611509565b3360009081526009602052604090205461067d91906114ea565b61107c565b3360008181526009602052604080822091909155600754905163226bf2d160e21b815260048101929092526001600160a01b0316906389afcb4490602401600060405180830381600087803b1580156106da57600080fd5b505af11580156106ee573d6000803e3d6000fd5b50505050565b6000336105ba8185856107078383610c06565b61071191906114d2565b610d15565b33600090815260208190526040902054600111156107765760405162461bcd60e51b815260206004820181905260248201527f4164647265737320646f6573206e6f74206861766520616e7920746f6b656e73604482015260640161063b565b336108fc6107864261012c6114d2565b6007546107a49190600160a01b900467ffffffffffffffff166114ea565b336000908152602081905260409020546107be91906114ea565b6040518115909202916000818181858888f193505050501580156107e6573d6000803e3d6000fd5b5033600081815260208190526040902054610801919061115b565b565b61080b6112a1565b61080160006112fb565b336000908152600960205260408120548211156108445760405162461bcd60e51b815260040161063b9061148b565b336000908152600a60205260409020547f385657ac186bebca5bc6bebc9bac4bd116cda6dfa279669719b4aeaf292a5bb2906108809042611509565b61088a90846114ea565b60405190815260200160405180910390a1336000908152600a60205260409020546108b59042611509565b6108bf90836114ea565b92915050565b6108cd6112a1565b60405133904780156108fc02916000818181858888f193505050501580156108f9573d6000803e3d6000fd5b50565b60606004805461052990611520565b60075461092a904290600160a01b900467ffffffffffffffff166114ea565b61093490826114ea565b3410156109835760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e742045544820666f72207478000000000000000000604482015260640161063b565b61098d338261107c565b33600090815260086020526040812080543492906109ac9084906114d2565b909155505050565b600033816109c28286610c06565b905083811015610a225760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161063b565b6106048286868403610d15565b3360009081526009602052604090205415610acd5760405162461bcd60e51b815260206004820152605260248201527f416464726573732068617665207374616b656420746f6b656e2053544b2e205560448201527f6e7374616b6520697420616c6c20666972737420616e642074686520796f752060648201527131b0b71039ba30b5b29034ba1030b3b0b4b760711b608482015260a40161063b565b33600090815260208190526040902054811115610b385760405162461bcd60e51b8152602060048201526024808201527f4164647265737320646f6573206e6f74206861766520736f206d616e7920746f6044820152636b656e7360e01b606482015260840161063b565b3360009081526009602052604081208054839290610b579084906114d2565b9091555050336000818152600a60205260409020429055610b78908261115b565b6007546001600160a01b031663ad0be4bd33610b9384610c31565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015261ffff166024820152604401600060405180830381600087803b158015610bdd57600080fd5b505af1158015610bf1573d6000803e3d6000fd5b5050505050565b6000336105ba818585610eae565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600080600083118015610c445750600b83105b15610c51575060006108bf565b600a83118015610c615750606583105b15610c6e575060016108bf565b606483118015610c7f57506103e983105b15610c8c575060026108bf565b6103e88311156108bf5750600392915050565b610ca76112a1565b6001600160a01b038116610d0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161063b565b6108f9816112fb565b6001600160a01b038316610d775760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161063b565b6001600160a01b038216610dd85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161063b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610e468484610c06565b905060001981146106ee5781811015610ea15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161063b565b6106ee8484848403610d15565b6001600160a01b038316610f125760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161063b565b6001600160a01b038216610f745760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161063b565b6001600160a01b03831660009081526020819052604090205481811015610fec5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161063b565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906110239084906114d2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161106f91815260200190565b60405180910390a36106ee565b6001600160a01b0382166110d25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161063b565b80600260008282546110e491906114d2565b90915550506001600160a01b038216600090815260208190526040812080548392906111119084906114d2565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166111bb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161063b565b6001600160a01b0382166000908152602081905260409020548181101561122f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161063b565b6001600160a01b038316600090815260208190526040812083830390556002805484929061125e908490611509565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610e2d565b6005546001600160a01b031633146108015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161063b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461136457600080fd5b919050565b60006020828403121561137a578081fd5b6113838261134d565b9392505050565b6000806040838503121561139c578081fd5b6113a58361134d565b91506113b36020840161134d565b90509250929050565b6000806000606084860312156113d0578081fd5b6113d98461134d565b92506113e76020850161134d565b9150604084013590509250925092565b60008060408385031215611409578182fd5b6114128361134d565b946020939093013593505050565b600060208284031215611431578081fd5b5035919050565b6000602080835283518082850152825b8181101561146457858101830151858201604001528201611448565b818111156114755783604083870101525b50601f01601f1916929092016040019392505050565b60208082526027908201527f4164647265737320646f6573206e6f742068617665207374616b656420746f6b60408201526632b71029aa259760c91b606082015260800190565b600082198211156114e5576114e561155b565b500190565b60008160001904831182151516156115045761150461155b565b500290565b60008282101561151b5761151b61155b565b500390565b600181811c9082168061153457607f821691505b6020821081141561155557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220c914b11d1bcc01f912e9cbd6071cd91c64ccf180bdd417445f1d10d90737076b64736f6c63430008040033";

type StakeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeToken__factory extends ContractFactory {
  constructor(...args: StakeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    StakeTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakeToken> {
    return super.deploy(
      StakeTokenAddress,
      overrides || {}
    ) as Promise<StakeToken>;
  }
  override getDeployTransaction(
    StakeTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(StakeTokenAddress, overrides || {});
  }
  override attach(address: string): StakeToken {
    return super.attach(address) as StakeToken;
  }
  override connect(signer: Signer): StakeToken__factory {
    return super.connect(signer) as StakeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeTokenInterface {
    return new utils.Interface(_abi) as StakeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeToken {
    return new Contract(address, _abi, signerOrProvider) as StakeToken;
  }
}
